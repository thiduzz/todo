version: '3.5'
services:
  # App Service
  app:
    # Configuration for building the docker image for the service
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    depends_on:
      - redis # This service depends on redis. Start that first.
      - mysql
    environment: # Pass environment variables to the service
      REDIS_URL: redis:6379
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - web-network

  mysql:
    image: mysql:5.7
    restart: always
    command:
      - '--sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'
      - '--default-authentication-plugin=mysql_native_password'
    environment:
      - MYSQL_ROOT_PASSWORD=A23044A17F77087537B832318D75E6D4DE7FBEA5
      - MYSQL_DATABASE=todo
      - MYSQL_USER=thiz
      - MYSQL_PASSWORD=thithi
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql/:/var/lib/mysql
    networks:
      - web-network
  redis:
    image: redis:5.0.8
    volumes:
      - "redis:/data"
    networks:
      - web-network
volumes:
  mysql:
  redis:
networks:
  web-network:
    name: web-network
    driver: bridge
secrets:
  host_ssh_key:
    file: ~/.ssh/id_rsa